1. basic search on attribute value: find books published after 2023 (so only 2024)
                
MATCH (b:Book)
WHERE b.publication_year > 2023
RETURN b.title, b.publication_year
            
2a. aggregation paperback: count total number of books in paperback format

MATCH (b:Book)
WHERE b.format = "Paperback"
RETURN count(b)

2b. aggregation hardcover: count total number of books in hardcover format

MATCH (b:Book)
WHERE b.format = "Hardcover"
RETURN count(b)

2c. aggregation ebook: count total number of books in ebook format

MATCH (b:Book)
WHERE b.ebook_url IS NOT NULL
RETURN count(b)

3. 10 english books with over 10000 pages, sorted by publication year

MATCH (b:Book)
WHERE b.language_code = "en " and b.publication_year IS NOT NULL and b.page_count > 10000
RETURN b.title, b.publication_year, b.language_code, b.page_count
ORDER BY b.publication_year DESC
LIMIT 10

4. group books by publication year and count

MATCH (b:Book)
WHERE b.publication_year IS NOT NULL
RETURN b.publication_year as year, count(*) as number_of_books
ORDER BY year DESC

5. indexes created in execute_cypher.py

CREATE INDEX book_rating_index IF NOT EXISTS
FOR (b:Book) ON b.avg_rating
            
CREATE INDEX price_amount_index IF NOT EXISTS
FOR (p:Price) ON p.list_price

CREATE INDEX category_name_index IF NOT EXISTS
FOR (c:Category) ON c.name


6. full text search

creating index: 
CREATE FULLTEXT INDEX book_title_index 
FOR (b:Book) 
ON EACH [b.title]

search in general:
CALL db.index.fulltext.queryNodes('book_title_index', $search_term)
YIELD node, score
WHERE node.title IS NOT NULL
RETURN node.title as title, score
LIMIT 5

search for search_term = "clerk":
CALL db.index.fulltext.queryNodes('book_title_index', "clerk")
YIELD node, score
WHERE node.title IS NOT NULL
RETURN node.title as title, score
LIMIT 5